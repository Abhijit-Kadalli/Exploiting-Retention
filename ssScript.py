from selenium import webdriver
import os
from bs4 import BeautifulSoup
from webdriver_manager.chrome import ChromeDriverManager 
from selenium import webdriver 
from selenium.webdriver.chrome.service import Service as ChromeService
from Screenshot import Screenshot
from selenium.webdriver.common.by import By
from PIL import Image

# Create a new instance of the Chrome driver
driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()))
driver.maximize_window() 
driver.implicitly_wait(5)

# Create a new instance of the Screenshot class
ob = Screenshot.Screenshot()

# Provide the URL of the website
url = "https://www.reddit.com/r/AskReddit/comments/13plb2h/how_did_you_realise_that_your_familyextended/"

# Send a GET request to the website
driver.get(url)
html = driver.page_source

url = url.split("/")

# Parse the HTML content using BeautifulSoup
soup = BeautifulSoup(html, "html.parser")

post_text = url[7]
print(post_text)

# make a directory to store the screenshots
try:
    os.mkdir(post_text)
except:
    pass

# Xpath
xpath = "/html/body/shreddit-app/div/div[2]/faceplate-batch/faceplate-tracker/shreddit-comment-tree/shreddit-comment["
driver.execute_script("document.getElementById('nd:visible top-0 left-0 right-0 fixed z-[4] theme-beta').setAttribute('style', 'display:none !important;');")

for i in range(1,4):
    xpath_curr = xpath + str(i) + "]"
    s = driver.find_element(By.XPATH, xpath_curr)
    print(s)
    location = s.location
    size = s.size
    x = location['x']
    y = location['y']
    height = location['y']+size['height']
    width = location['x']+size['width']
    image = ob.full_screenshot(driver, save_path=post_text, image_name=f"comment_clipp{i}.png")
    image_object = Image.open(image)
    image_object = image_object.crop((int(x), int(y), int(width), int(height)))
    img_url = os.path.abspath(os.path.join(post_text, f"comment{i}.png"))
    image_object.save(img_url)
    image_object.close()
    os.remove(image)
# # Find all <shreddit-comment> tags
# comment_tags = soup.find_all("shreddit-comment")

# # Process the comment tags as per your requirements
# for i,comment in enumerate(comment_tags):
#     # Access and extract information from the comment tag
#     # Example: print the content of the comment
#     text = comment.find("div", class_="md").text.strip()
#     screenshot_path = f"comment_{i}.png"
#     comment.screenshot(os.path.abspath(f"{post_text}/{screenshot_path}"))

driver.close()
driver.quit()
